#summary Unityゲーム開発 (1)

= イントロ =
  * 今後の授業の進め方。

= 最初の課題：迷路ゲーム =
まずは以下の作例と同じものを作ることを目標にします。

[http://dl.dropbox.com/u/14572092/VgaUnity/BallMazePrototype.html 作例のページ]

= 形だけ作ってみる =

== 迷路の構築 ==
  * 床を作る。
  * 壁を作る。

== プレハブについて ==
  * プレハブとは、ゲームオブジェクトの「作り置き」。
  * プレハブを使うと、たくさんの複製を生成できる。
  * プレハブを使うと、プログラムから複製を生成できる。
  * プレハブを使うと、いっぺんに設定を変更できる。
  * ProjectビューのCreate→Prefabで空のプレハブを作成。
  * 任意のゲームオブジェクトをドラッグ＆ドロップしてプレハブ化。
  * プレハブをHierarchyビューにドラッグ＆ドロップでインスタンス化。
  * インスタンス＝「実体化」。プレハブをシーン中に実体化させたもの。
  * インスタンスは、エディット時には青色表示される。

== 迷路の構築（続き） ==
  * プレハブを使って、外壁を作る。
  * プレハブを使って、障害物を作る。
  * 空のオブジェクトを親にして階層構造化する。

== マテリアル ==
  * マテリアル＝「材質」。
  * シェーダーやテクスチャやカラーを組み合わせて、描画のされ方を決めるもの。
  * ProjectビューのCreate→Materialでマテリアル作成。
  * Base (RGB)の横の四角にテクスチャをドラッグ＆ドロップでテクスチャ設定。
  * Main Colorで色合い設定。
  * マテリアルをオブジェクトにドラッグ＆ドロップで設定。
  * 外壁や障害物はプレハブにドラッグ＆ドロップ。

== ボールの作成 ==
  * Sphereを作って、Rigidbodyコンポーネントを与えるだけ。
  * プレハブ化して、何個か配置。

== 床を動かす ==
  * プログラムで動かす場合は、Rigidbodyコンポーネントを追加してisKinematicをオンにする。
  * 余力があれば、プログラムを書いて制御してみる。
  * ProjectビューのCreate→!JavaScriptで新規スクリプト作成。
  * スクリプトを迷路の親オブジェクトにドラッグ＆ドロップする。
{{{
function Update () {
	transform.rotation = 
		Quaternion.AngleAxis(Input.GetAxis("Horizontal") * -10.0, Vector3.forward) *
		Quaternion.AngleAxis(Input.GetAxis("Vertical") * 10.0, Vector3.right);
}
}}}

{{{
function Update () {
	Physics.gravity = 
		Quaternion.AngleAxis(Input.GetAxis("Horizontal") * 60.0, Vector3.forward) *
		Quaternion.AngleAxis(Input.GetAxis("Vertical") * -60.0, Vector3.right) *
		(Vector3.up * -20.0);
}
}}}


== とりあえず制作 ==
  * 適当な所で提出。

== 考察 ==
  * 現時点の問題点は？
  * 解決方法を考えてみよう。